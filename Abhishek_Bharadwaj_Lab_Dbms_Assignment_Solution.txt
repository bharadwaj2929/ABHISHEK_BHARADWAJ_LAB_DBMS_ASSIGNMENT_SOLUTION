create schema E_Commerce;

use E_Commerce;

--1)Creating Tables For Suppliers,Customers,Categories,Products,Products_Details,Orders,Ratings To Store Datas For E_Commerce Website With Schemas Definitions.
 
create table Suppliers(SUPP_ID int auto_increment primary key,SUPP_NAME varchar(250),SUPP_CITY varchar(250),SUPP_PHONE bigint);
create table Customers(CUS_ID int auto_increment primary key,CUS_NAME varchar(250),CUS_PHONE bigint,CUS_CITY varchar(250),CUS_GENDER varchar(1));
create table Categories(CAT_ID int primary key,CAT_NAME varchar(250));
create table Products(PRO_ID int primary key,PRO_NAME varchar(250),PRO_DESC varchar(250),CAT_ID int,foreign key(CAT_ID) references Categories(CAT_ID));
create table Products_Details(PROD_ID int primary key,PRO_ID int,SUPP_ID int,PRICE int,foreign key(PRO_ID) references Products(PRO_ID),foreign key(SUPP_ID) references Suppliers(SUPP_ID));
create table Orders(ORD_ID int primary key,ORD_AMOUNT int,ORD_DATE date,CUS_ID int,PROD_ID int,foreign key(CUS_ID) references Customers(CUS_ID),foreign key(PROD_ID) references Products_Details(PROD_ID));
create table Ratings(RAT_ID int primary key,CUS_ID int,SUPP_ID int,RAT_RATSTARS int,foreign key(CUS_ID) references Customers(CUS_ID),foreign key(SUPP_ID) references Suppliers(SUPP_ID));

--2a)Inserting Following Datas For Suppliers_Table Created Above.

insert into Suppliers(SUPP_ID,SUPP_NAME,SUPP_CITY,SUPP_PHONE) values(1,'RAJESH_RETAILS','DELHI',1234567890);
insert into Suppliers(SUPP_ID,SUPP_NAME,SUPP_CITY,SUPP_PHONE) values(2,'APPARIO_LTD.','MUMBAI',2589631470);
insert into Suppliers(SUPP_ID,SUPP_NAME,SUPP_CITY,SUPP_PHONE) values(3,'KNOME_PRODUCTS','BENGALURU',9785462315);
insert into Suppliers(SUPP_ID,SUPP_NAME,SUPP_CITY,SUPP_PHONE) values(4,'BANSAL_RETAILS','COCHIN',8975463285);
insert into Suppliers(SUPP_ID,SUPP_NAME,SUPP_CITY,SUPP_PHONE) values(5,'MITTAL_LTD.','LUCKNOW',7898456532);

--2b)Inserting Following Datas For CUSTOMERS_Table Created Above.

insert into Customers(CUS_ID,CUS_NAME,CUS_PHONE,CUS_CITY,CUS_GENDER) values(1,'AAKASH',9999999999,'DELHI','M');
insert into Customers(CUS_ID,CUS_NAME,CUS_PHONE,CUS_CITY,CUS_GENDER) values(2,'AMAN',9785463215,'NOIDA','M');
insert into Customers(CUS_ID,CUS_NAME,CUS_PHONE,CUS_CITY,CUS_GENDER) values(3,'NEHA',9999999999,'MUMBAI','F');
insert into Customers(CUS_ID,CUS_NAME,CUS_PHONE,CUS_CITY,CUS_GENDER) values(4,'MEGHA',9994562399,'KOLKATA','F');
insert into Customers(CUS_ID,CUS_NAME,CUS_PHONE,CUS_CITY,CUS_GENDER) values(5,'PULKIT',7895999999,'LUCKNOW','M');

--2c)Inserting Following Datas For CATEGORIES_Table Created Above.

insert into Categories(CAT_ID,CAT_NAME) values(1,'BOOKS');
insert into Categories(CAT_ID,CAT_NAME) values(2,'GAMES');
insert into Categories(CAT_ID,CAT_NAME) values(3,'GROCERIES');
insert into Categories(CAT_ID,CAT_NAME) values(4,'ELECTRONICS');
insert into Categories(CAT_ID,CAT_NAME) values(5,'CLOTHES');

--2d)Inserting Following Datas For PRODUCTS_Table Created Above.

insert into Products(PRO_ID,PRO_NAME,PRO_DESC,CAT_ID) values(1,'GTA_V','DFJDJFDJFDJFDJFJF',2);
insert into Products(PRO_ID,PRO_NAME,PRO_DESC,CAT_ID) values(2,'TSHIRT','DFDFJDFJDKFD',5);
insert into Products(PRO_ID,PRO_NAME,PRO_DESC,CAT_ID) values(3,'ROG_LAPTOP','DFNTTNTNTERND',4);
insert into Products(PRO_ID,PRO_NAME,PRO_DESC,CAT_ID) values(4,'OATS','REURENTBTOTH',3);
insert into Products(PRO_ID,PRO_NAME,PRO_DESC,CAT_ID) values(5,'HARRY_POTTER','NBEMCTHTJTH',1);

--2e)Inserting Following Datas For PRODUCTS_DETAILS_Table Created Above.

insert into Products_Details(PROD_ID,PRO_ID,SUPP_ID,PRICE) values(1,1,2,1500);
insert into Products_Details(PROD_ID,PRO_ID,SUPP_ID,PRICE) values(2,3,5,30000);
insert into Products_Details(PROD_ID,PRO_ID,SUPP_ID,PRICE) values(3,5,1,3000);
insert into Products_Details(PROD_ID,PRO_ID,SUPP_ID,PRICE) values(4,2,3,2500);
insert into Products_Details(PROD_ID,PRO_ID,SUPP_ID,PRICE) values(5,4,1,1000);

--2f)Inserting Following Datas For Orders_Table Created Above.

insert into Orders(ORD_ID,ORD_AMOUNT,ORD_DATE,CUS_ID,PROD_ID) values(20,1500,'2021-10-12',3,5);
insert into Orders(ORD_ID,ORD_AMOUNT,ORD_DATE,CUS_ID,PROD_ID) values(25,30500,'2021-09-16',5,2);
insert into Orders(ORD_ID,ORD_AMOUNT,ORD_DATE,CUS_ID,PROD_ID) values(26,2000,'2021-10-05',1,1);
insert into Orders(ORD_ID,ORD_AMOUNT,ORD_DATE,CUS_ID,PROD_ID) values(30,3500,'2021-08-16',4,3);
insert into Orders(ORD_ID,ORD_AMOUNT,ORD_DATE,CUS_ID,PROD_ID) values(50,2000,'2021-10-06',2,1);

--2g)Inserting Following Datas For Ratings_Table Created Above.

insert into Ratings(RAT_ID,CUS_ID,SUPP_ID,RAT_RATSTARS) values(1,2,2,4);
insert into Ratings(RAT_ID,CUS_ID,SUPP_ID,RAT_RATSTARS) values(2,3,4,3);
insert into Ratings(RAT_ID,CUS_ID,SUPP_ID,RAT_RATSTARS) values(3,5,1,5);
insert into Ratings(RAT_ID,CUS_ID,SUPP_ID,RAT_RATSTARS) values(4,1,3,2);
insert into Ratings(RAT_ID,CUS_ID,SUPP_ID,RAT_RATSTARS) values(5,4,5,4);

--3)Display The Numbers Of The Customers_Groups By Their Genders Who've Placed Any Orders Of Amounts Greater_Than Or Equal_To INR 3000.

select p.CUS_GENDER, count(p.CUS_GENDER) from (select c.CUS_ID,c.CUS_GENDER,o.ORD_AMOUNT from customers c inner join orders o
on c.CUS_ID=o.CUS_ID) as p
where p.ORD_AMOUNT>3000
group by p.CUS_GENDER;

--4)Display All The Orders Along With The Products_Names Ordered By A Customers Having Customers_Id=2.

select * from products where PRO_ID in
(select PRO_ID from products_details where PROD_ID in
(select PROD_ID from orders where CUS_ID=2));

--5)Display The Suppliers_Details Who Can Supply More Than 1 Products.

select * from suppliers
where SUPP_ID in (select SUPP_ID from products_details
group by SUPP_ID
having count(SUPP_ID)>1);

--6)Find The Categories Of The Products Whose Orders_Amounts Is Minimum.

select * from categories where CAT_ID in
(select CAT_ID from products where PRO_ID in
(select PRO_ID from products_details where PROD_ID in
(select PROD_ID from orders where ORD_AMOUNT in
(select min(ORD_AMOUNT) from orders))));

--7)Display The Ids And Names Of The Products Ordered After '2021-10-05'.

select a.PRO_ID,b.PRO_NAME,a.ORD_DATE from products b inner join
(select o.ORD_DATE,o.PROD_ID,pd.PRO_ID from orders o inner join products_details pd on o.PROD_ID=pd.PROD_ID) as a
on a.PRO_ID=b.PRO_ID
where a.ORD_DATE>'2021-10-05';

--8)Print The Top 3 Suppliers_Names And Ids And Their Ratings On The Basis Of Their Ratings Along With The Customers_Names Who Has Given The Ratings.

select a.SUPP_NAME,a.SUPP_ID,a.RAT_RATSTARS,c.CUS_NAME from customers c inner join
(select s.SUPP_NAME,s.SUPP_ID,r.RAT_RATSTARS,r.CUS_ID from ratings r inner join suppliers s on r.SUPP_ID=s.SUPP_ID) as a
on c.CUS_ID=a.CUS_ID
order by a.RAT_RATSTARS desc
limit 3;

--9)Display Customers_Names And Genders Whose Names Starts Or Ends With Characters 'A'.

select CUS_NAME,CUS_GENDER from customers where CUS_NAME like 'A%' or CUS_NAME like '%A';

--10)Display The Total Orders_Amounts Of The Male_Customers.

select sum(o.ORD_AMOUNT) as total_orders_of_male_customers from customers c inner join orders o on o.CUS_ID=c.CUS_ID
where c.CUS_GENDER='M'
group by c.CUS_GENDER;

--11)Display All The Customers Left Outer Join With The Orders.

select c.CUS_NAME,c.CUS_GENDER,c.CUS_CITY,c.CUS_PHONE from customers c left outer join orders o on c.CUS_ID=o.CUS_ID

--12)Create A Stored Procedure To Display The Ratings For A Suppliers If Any Along With The Verdicts On That Ratings If Any Like If Ratings>4 Then "Genuines_Suppliers" If Ratings>2 "Averages_Suppliers" Else "Suppliers Shouldn't Be Considered".

CREATE PROCEDURE RatingsVerdicts()
BEGIN
select s.SUPP_ID,s.SUPP_NAME,r.RAT_RATSTARS,
case
when r.RAT_RATSTARS>4 then 'GENUINES_SUPPLIERS'
when r.RAT_RATSTARS>2 then 'AVERAGES_SUPPLIERS'
else 'Suppliers Shouldn't Be Considered'
end as verdicts from ratings r inner join suppliers s on r.SUPP_ID=s.SUPP_ID;
END

call E_Commerce.RatingsVerdicts();